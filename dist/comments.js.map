{"version":3,"file":"comments.js","mappings":"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","sources":["webpack://news/./src/assets/js/modules/classes/comment.js","webpack://news/./src/assets/js/modules/comments.js"],"sourcesContent":["'use strict'\r\n\r\nimport Notice from \"./notice.js\";\r\nimport USER_IMG from '../../../img/user.png';\r\n\r\nexport default class Comment extends Notice {\r\n    /*---------------------------------------------------COMMENT-MANAGEMENT---------------------------------------------------*/\r\n\r\n    exportHtmlElement() {\r\n        \r\n\r\n        if (!this.by && !this.text) return \"\";\r\n    \r\n        let body = `\r\n             <div class=\"comment\">\r\n                <div class=\"user-container\">\r\n                    <img class=\"comment-img\" src=${USER_IMG}>\r\n                    <span class=\"card-text by\">${this.by}:</span>\r\n                </div>\r\n    \r\n                <div class=\"comment-text-container\">\r\n                    <p class=\"card-text text\">${this.text}</p>\r\n                    <span class=\"other\">...altro</span>\r\n                    <p class=\"card-text text-end data\">${this.fullDate}-${this.fullHours}</p>\r\n                </div>\r\n               </div>\r\n        `;\r\n    \r\n        return body;\r\n    }\r\n}","'use strict'\r\n\r\nimport '../../css/comment.css';\r\n\r\nimport  * as NewsLibrary  from './library/news-function-library.js';\r\nimport  * as Library  from './library/functions-library.js';\r\nimport Comment from './classes/comment.js';\r\n\r\nimport { PAGE, MAIN_CONTAINER, newStories, baseUrl } from '../main.js';\r\n\r\nPAGE.addEventListener(\"click\", seeComments);\r\n\r\nasync function seeComments(e) {\r\n\r\n    let button = e.target.closest(\".commentButton\");\r\n\r\n    /*-----------------If target isn't comment button-----------------*/\r\n\r\n    if ( !button ) {\r\n\r\n        if ( e.target.closest(\".comment-container\") ) return;\r\n\r\n        // Removes comments by clicking anywhere in the document\r\n        // EXCEPT the itself's comment\r\n\r\n        let allComments = document.body.querySelectorAll(\".comment-container\");\r\n\r\n        if ( allComments ) {\r\n\r\n            for ( let comment of allComments) {\r\n                commentTransition(comment, \"comment-transition\", \"reverse\");    // Remove all comments\r\n            } \r\n\r\n            let allCards = document.body.querySelectorAll( \".cards\") ;\r\n\r\n            for ( let card of allCards) {       // Makes the border-radius at initial value\r\n                card.classList.remove(\"show-comments\");\r\n\r\n                let linksContainer = card.querySelector( \".links-container\") ;\r\n                linksContainer.classList.remove(\"show-comments\");\r\n            } \r\n        } \r\n\r\n        return;\r\n    }\r\n\r\n    /*---------------------CLICK ON COMMENT BUTTON--------------------*/\r\n\r\n    let card = e.target.closest(\".cards\");\r\n    let linksContainer = card.querySelector(\".links-container\");\r\n\r\n    if( !card.classList.contains(\"show-comments\")) {    // SEE COMMENTS\r\n\r\n        PAGE.removeEventListener(\"click\", seeComments);\r\n\r\n        let id = button.dataset.id;     // getting the notice id\r\n\r\n        let html;\r\n\r\n        // Check the ID\r\n\r\n        // NB the constructor of every Notice inserts its id in the button \r\n        // only if there are comments\r\n\r\n        if ( id !== \"\" ){\r\n            let commentObj = await getCommentsByNoticeId(id);\r\n            html = commentObj.html;\r\n\r\n            let commentButton = card.querySelector(\".n-comments\");\r\n            commentButton.textContent = commentObj.nComments;\r\n        }\r\n\r\n        else if ( id == \"\" ){\r\n            html = `<span>Non ci sono commenti</span>`\r\n        }\r\n\r\n        // Creates the elements that make up the comments\r\n\r\n        card.classList.add(\"show-comments\");    // Remove border-radius at the bottom of card\r\n        linksContainer.classList.add(\"show-comments\");  // Remove border-radius at the top of comment\r\n\r\n        let div = document.createElement('DIV');        // Create container for comment\r\n        div.classList.add( \"comment-container\" ,\"visible\" );\r\n        \r\n        card.after(div);\r\n        commentTransition(div, \"comment-transition\", \"normal\");\r\n       \r\n        // Scrol for smarphone\r\n        if ( window.innerWidth < 600 ) div.scrollIntoView(\"alignToTop\");\r\n        \r\n        div.insertAdjacentHTML(\"beforeend\", html);\r\n        \r\n        PAGE.addEventListener(\"click\", seeComments);\r\n    }\r\n    else {\r\n        // Remove the comments by clicking on comment button\r\n\r\n        let divComments = card.nextElementSibling.closest( \".comment-container\");\r\n\r\n        commentTransition(divComments, \"comment-transition\", \"reverse\");\r\n        \r\n        // Makes the border-radius at initial value\r\n        card.classList.remove(\"show-comments\");\r\n        linksContainer.classList.remove(\"show-comments\");\r\n\r\n    }\r\n}\r\n\r\n/*-------------------------Get-HTML-Comments-----------------------*/\r\n\r\n// getCommentsByNoticeId returns an HTML message\r\n// in case of null/undefinided or void response\r\n\r\n// else returns an object that has the HTML code of comments \r\n// and the number of how many are there\r\n\r\nasync function getCommentsByNoticeId(id) {\r\n\r\n    let error = `<span style=\"color:red\">Errore nel recupero del commento</span>`;\r\n\r\ntry{\r\n        // Get Notice by ID\r\n        let request = await NewsLibrary.getNoticeById( baseUrl, [id] );\r\n\r\n        // Put the comments array in commentsIds\r\n        let commentsIds = request[0].kids;\r\n\r\n        // Get the Comments by Ids\r\n        let commentArr = await NewsLibrary.getNoticeById( baseUrl, commentsIds );\r\n\r\n        if ( !commentArr ) { return error; }\r\n\r\n        // Get the array of HTML code by comments\r\n        let htmlCommentArr = writeComment(commentArr);\r\n\r\n        return {\r\n            html: htmlCommentArr.reduce( (acc, html)=> {\r\n                        let res = acc + html + `\\n`;\r\n                        return res;\r\n                    }, \"\" ),\r\n\r\n            nComments : commentsIds.length\r\n        }\r\n        \r\n    }\r\n    catch(err) { NewsLibrary.forErrors(err, PAGE, MAIN_CONTAINER) };\r\n\r\n}\r\n\r\n\r\n\r\n/*---------------------Write-COMMENTS-in-DOCUMENT------------------*/\r\n\r\nfunction writeComment(comments){\r\n\r\n    try{\r\n        let res = [];\r\n\r\n        for ( let data of comments ) {\r\n\r\n            let comment = null;\r\n            let property = null;\r\n\r\n            // Creates CARD\r\n\r\n            property = Library.exstractProperty(data, Comment.argumentsOrder);\r\n\r\n            comment = new Comment(...property);\r\n\r\n            let html = comment.exportHtmlElement();\r\n\r\n            res.push(html);     // Array of CARDs html code\r\n\r\n        }\r\n        return res;\r\n\r\n    } catch(err){\r\n        NewsLibrary.clearPage(PAGE, MAIN_CONTAINER);\r\n        throw err;\r\n    }\r\n}\r\n\r\n/*----------------------------TRANSITION---------------------------*/\r\n\r\nfunction commentTransition(elem, cssClass, direction=\"normal\") {\r\n\r\n    let start = window.getComputedStyle(elem).getPropertyValue(\"--startTransition\");\r\n    let end = window.getComputedStyle(elem).getPropertyValue(\"--endTransition\");\r\n\r\n    elem.style.animationDirection = direction;\r\n    elem.classList.add(cssClass);\r\n    \r\n    elem.onanimationend = ()=> {\r\n\r\n        let top;\r\n        \r\n        if ( direction == \"normal\" ) {\r\n            top=`${end}`;\r\n            elem.style.top = top;\r\n        }\r\n\r\n        elem.classList.remove(cssClass);\r\n\r\n        if ( direction == \"reverse\" ) {\r\n            top=`${start}`;\r\n            elem.style.top = top;\r\n            elem.remove();\r\n        }\r\n    };\r\n}"],"names":["Comment","this","by","text","fullDate","fullHours","Notice","seeComments","e","button","target","closest","allComments","document","body","querySelectorAll","commentTransition","allCards","card","classList","remove","querySelector","linksContainer","contains","PAGE","id","dataset","getCommentsByNoticeId","commentObj","html","textContent","nComments","add","div","createElement","after","window","innerWidth","scrollIntoView","insertAdjacentHTML","nextElementSibling","error","NewsLibrary","baseUrl","request","commentsIds","kids","commentArr","htmlCommentArr","writeComment","reduce","acc","length","MAIN_CONTAINER","comments","res","property","data","Library","exportHtmlElement","push","err","elem","cssClass","direction","start","getComputedStyle","getPropertyValue","end","style","animationDirection","onanimationend","top"],"sourceRoot":""}