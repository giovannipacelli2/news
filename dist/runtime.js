(()=>{"use strict";var e,r,o,t,n,a={},i={};function l(e){var r=i[e];if(void 0!==r)return r.exports;var o=i[e]={id:e,loaded:!1,exports:{}};return a[e].call(o.exports,o,o.exports,l),o.loaded=!0,o.exports}l.m=a,e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",r="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",o="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",t=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},l.a=(n,a,i)=>{var l;i&&((l=[]).d=1);var u,f,c,p=new Set,s=n.exports,d=new Promise(((e,r)=>{c=r,f=e}));d[r]=s,d[e]=e=>(l&&e(l),p.forEach(e),d.catch((e=>{}))),n.exports=d,a((n=>{var a;u=(n=>n.map((n=>{if(null!==n&&"object"==typeof n){if(n[e])return n;if(n.then){var a=[];a.d=0,n.then((e=>{i[r]=e,t(a)}),(e=>{i[o]=e,t(a)}));var i={};return i[e]=e=>e(a),i}}var l={};return l[e]=e=>{},l[r]=n,l})))(n);var i=()=>u.map((e=>{if(e[o])throw e[o];return e[r]})),f=new Promise((r=>{(a=()=>r(i)).r=0;var o=e=>e!==l&&!p.has(e)&&(p.add(e),e&&!e.d&&(a.r++,e.push(a)));u.map((r=>r[e](o)))}));return a.r?f:i()}),(e=>(e?c(d[o]=e):f(s),t(l)))),l&&(l.d=0)},n=[],l.O=(e,r,o,t)=>{if(!r){var a=1/0;for(c=0;c<n.length;c++){for(var[r,o,t]=n[c],i=!0,u=0;u<r.length;u++)(!1&t||a>=t)&&Object.keys(l.O).every((e=>l.O[e](r[u])))?r.splice(u--,1):(i=!1,t<a&&(a=t));if(i){n.splice(c--,1);var f=o();void 0!==f&&(e=f)}}return e}t=t||0;for(var c=n.length;c>0&&n[c-1][2]>t;c--)n[c]=n[c-1];n[c]=[r,o,t]},l.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return l.d(r,{a:r}),r},l.d=(e,r)=>{for(var o in r)l.o(r,o)&&!l.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{l.b=document.baseURI||self.location.href;var e={runtime:0};l.O.j=r=>0===e[r];var r=(r,o)=>{var t,n,[a,i,u]=o,f=0;if(a.some((r=>0!==e[r]))){for(t in i)l.o(i,t)&&(l.m[t]=i[t]);if(u)var c=u(l)}for(r&&r(o);f<a.length;f++)n=a[f],l.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return l.O(c)},o=self.webpackChunknews=self.webpackChunknews||[];o.forEach(r.bind(null,0)),o.push=r.bind(null,o.push.bind(o))})(),l.nc=void 0})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,